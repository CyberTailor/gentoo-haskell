# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

dev-haskell/ansi-wl-pprint:example - Build the example application.
dev-haskell/cabal-install:native-dns - Enable use of the resolv and windns packages for performing DNS lookups.
dev-haskell/cabal-install:network-uri - Get Network.URI from the network-uri package.
dev-haskell/cabal-install:noprefs - Ignore 'preferred-versions' file from hackage's tarball.
dev-haskell/cabal-install:parsec - Use parser written in parsec library.
dev-haskell/certificate:executable - Build the executable
dev-haskell/chell:color-output - use colors in program output
dev-haskell/comonad:containers - You can disable the use of the `containers` package using `-f-containers`. Disabing this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/comonad:contravariant - You can disable the use of the `contravariant` package using `-f-contravariant`. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users. If disabled we will not supply instances of `Contravariant`
dev-haskell/comonad:distributive - You can disable the use of the `distributive` package using `-f-distributive`. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users. If disabled we will not supply instances of `Distributive`
dev-haskell/comonad:test-doctests - Run the doctests test suite
dev-haskell/contravariant:safe - Get Safe guarantees rather than merely Trustworthy, but with worse constant factors.
dev-haskell/contravariant:semigroups - You can disable the use of the `semigroups` package using `-f-semigroups`. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/contravariant:statevar - You can disable the use of the `StateVar` package using `-f-StateVar`. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/contravariant:tagged - You can disable the use of the `tagged` package on older versons of GHC using `-f-tagged`. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/crypto-api:all_cpolys - Build all the CMAC polynomes up to 10000 bits instead of just the usual ones.
dev-haskell/glib:closure_signals - Use the the GClosure-based signals implementation.
dev-haskell/gtk:deprecated - Include definitions in this library that are considered obsolete.
dev-haskell/gtk:fmode-binary - Set the default file translation mode for file I/O operations to _O_BINARY.
dev-haskell/gtk:gio - Depend on GIO package, thereby enabling certain features.
dev-haskell/gtk3:fmode-binary - Set the default file translation mode for file I/O operations to _O_BINARY.
dev-haskell/gtk3:gio - Depend on GIO package, thereby enabling certain features.
dev-haskell/hashed-storage:diff - Provide the Storage.Hashed.Diff module.
dev-haskell/hashed-storage:hpc - Compile with the profiling ghc flag -fhpc.
dev-haskell/haskeline:legacy-encoding - Use legacy iconv encoding for POSIX. This is only intended for testing.
dev-haskell/haskeline:libiconv - Explicitly link against the libiconv library.
dev-haskell/haskeline:terminfo - Use the terminfo package for POSIX consoles.
dev-haskell/httpd-shed:buildexamples - Build example executables.
dev-haskell/httpd-shed:network-uri - Get Network.URI from the network-uri package.
dev-haskell/json:generic - Add support for generic encoder (dev-haskell/syb)
dev-haskell/json:mapdict - Encode Haskell maps as JSON dicts
dev-haskell/json:parsec - Add support for parsing with Parsec
dev-haskell/json:pretty - Add support for using pretty printing combinators
dev-haskell/lens:benchmark-uniplate - Enable benchmarking against Neil Mitchell's uniplate library for comparative performance analysis. Defaults to being turned off to avoid the extra dependency.
dev-haskell/lens:dump-splices - Build and run the doctests test-suite.
dev-haskell/lens:inlining - Generate inline pragmas when using template-haskell. This defaults to enabled, but you can to shut it off to benchmark the relative performance impact, or as last ditch effort to address compile errors resulting from the myriad versions of template-haskell that all purport to be 2.8.
dev-haskell/lens:j - Attempt a parallel build with GHC 7.8.
dev-haskell/lens:old-inline-pragmas - Some 7.6.1-rc1 users report their TH still uses old style inline pragmas. This lets them turn on inlining.
dev-haskell/lens:safe - Disallow unsafeCoerce
dev-haskell/lens:test-doctests - Build and run the doctests test-suite.
dev-haskell/lens:test-hlint - You can disable the hlint test suite with -f-test-hlint
dev-haskell/lens:test-hunit - You can disable the hunit test suite with -f-test-hunit
dev-haskell/lens:test-properties - Build the properties test if we're building tests
dev-haskell/lens:test-templates - Build the test templates if we're building tests
dev-haskell/lens:trustworthy - Assert that we are trustworthy when we can
dev-haskell/publicsuffixlist:create - export Network.PublicSuffixList.Create module
dev-haskell/publicsuffixlist:runtimelist - read suffix list from dist at startup instead of embedding list into library
dev-haskell/quickcheck:template_haskell - Enable additional test modules requiring Template Haskell support.
dev-haskell/reflection:template-haskell - Enable template haskell.
dev-haskell/rfc5051:mkunicodedata - build codes generator itself
dev-haskell/sandi:with-conduit - Build with conduit
dev-haskell/semigroupoids:comonad - You can disable the use of the `comonad` package using `-f-comonad`. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users. If disabled we will not supply instances of `Comonad`
dev-haskell/semigroupoids:containers - You can disable the use of the `containers` package using `-f-containers`. Disabing this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/semigroupoids:contravariant - You can disable the use of the `contravariant` package using `-f-contravariant`. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users. If disabled we will not supply instances of `Contravariant`
dev-haskell/semigroupoids:distributive - You can disable the use of the `distributive` package using `-f-distributive`. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users. If disabled we will not supply instances of `Distributive`
dev-haskell/semigroupoids:tagged - You can disable the use of the `tagged` package using `-f-tagged`. Disabing this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/semigroupoids:unordered-containers - You can disable the use of the `unordered-containers` package (and also its dependency `hashable`) using `-f-unordered-containers`. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/sha:exe - Build a sha1 and a sha384 executable similar to 'md5sum'.
dev-haskell/snap-core:portable - No non-haskell unportable code.
dev-haskell/snap-server:build-pong - Build a server that just returns "PONG"
dev-haskell/snap-server:openssl - enable https support using dev-haskell/hsopenssl
dev-haskell/snap-server:portable - no non-haskell unportable code.
dev-haskell/transformers-base:orphaninstances - Build instances for orphan datatypes.
dev-haskell/vector:boundschecks - Enable bounds checking
dev-haskell/vector:internalchecks - Enable internal consistency checks at the cost of a significant performance penalty
dev-haskell/vector:unsafechecks - Enable bounds checking in unsafe operations at the cost of a significant performance penalty
dev-haskell/x509-store:executable - Build the executable
dev-haskell/zlib:non-blocking-ffi - Execute FFI calls in the context of haskell thread.
dev-lang/ghc:binary - Install the binary version directly, rather than using it to build the source version.
dev-lang/ghc:ghcbootstrap - Internal: Bootstrap GHC from an existing GHC installation.
dev-lang/ghc:ghcmakebinary - Internal: Build binary friendly for redistribution.
dev-lang/ghc:gmp - use dev-libs/gmp for integer operations (works faster, but an external depend).
dev-util/bustle:interactivetests - Build interactive test programs
dev-util/bustle:threaded - Build with support for multithreaded execution.
