--- a/Data/Text/Buildable.hs
+++ b/Data/Text/Buildable.hs
@@ -34,2 +34,3 @@ import qualified Data.Text as ST
 import qualified Data.Text.Lazy as LT
+import Prelude hiding ((<>))
 
--- a/Data/Text/Format.hs
+++ b/Data/Text/Format.hs
@@ -43,3 +43,3 @@ import Data.Text.Format.Types.Internal (Hex(..))
 import Data.Text.Lazy.Builder
-import Prelude hiding (exp, print)
+import Prelude hiding (exp, print, (<>))
 import System.IO (Handle)
--- a/Data/Text/Format/Functions.hs
+++ b/Data/Text/Format/Functions.hs
@@ -21,3 +21,4 @@ import Data.Monoid (mappend)
 import Data.Text.Lazy.Builder (Builder)
-import GHC.Base
+import GHC.Base hiding ((<>))
+import Prelude hiding ((<>))
 
--- a/Data/Text/Format/Int.hs
+++ b/Data/Text/Format/Int.hs
@@ -26,2 +26,3 @@ import GHC.Num (quotRemInteger)
 import GHC.Types (Int(..))
+import Prelude hiding ((<>))
 
--- a/Data/Text/Format/Types/Internal.hs
+++ b/Data/Text/Format/Types/Internal.hs
@@ -26,2 +26,3 @@ import Data.Text (Text)
 import Data.Typeable (Typeable)
+import qualified Data.Semigroup as S
 
@@ -48,2 +49,5 @@ newtype Format = Format { fromFormat :: Text }
 
+instance S.Semigroup Format where
+    Format a <> Format b = Format (a `mappend` b)
+
 instance Monoid Format where
