--- jmacro-0.6.15-orig/Language/Javascript/JMacro/Base.hs	2018-05-11 04:17:11.000000000 +1000
+++ jmacro-0.6.15/Language/Javascript/JMacro/Base.hs	2018-10-12 20:03:36.548764895 +1100
@@ -86,7 +86,7 @@
 
 takeOne :: State [Ident] Ident
 takeOne = do
-  (x:xs) <- get
+  ~(x:xs) <- get
   put xs
   return x
 
@@ -399,7 +399,7 @@
     JMGId _ -> jtoGADT $ f x
     where
         inScope z = IS $ do
-            ([StrI a], b) <- splitAt 1 `fmap` get
+            ~([StrI a], b) <- splitAt 1 `fmap` get
             put b
             return $ withHygiene_ a f z
 
@@ -428,19 +428,19 @@
                                 ('!':'!':i') -> (DeclStat (StrI i') t:) <$> blocks xs
                                 ('!':i') -> (DeclStat (StrI i') t:) <$> blocks xs
                                 _ -> do
-                                  (newI:st) <- get
+                                  ~(newI:st) <- get
                                   put st
                                   rest <- blocks xs
                                   return $ [DeclStat newI t `mappend` jsReplace_ [(StrI i, newI)] (BlockStat rest)]
                              blocks (x':xs) = (jfromGADT <$> go (jtoGADT x')) <:> blocks xs
                              (<:>) = liftM2 (:)
                    (JMGStat (ForInStat b (StrI i) e s)) -> do
-                          (newI:st) <- get
+                          ~(newI:st) <- get
                           put st
                           rest <- jfromGADT <$> go (jtoGADT s)
                           return $ JMGStat . ForInStat b newI e $ jsReplace_ [(StrI i, newI)] rest
                    (JMGStat (TryStat s (StrI i) s1 s2)) -> do
-                          (newI:st) <- get
+                          ~(newI:st) <- get
                           put st
                           t <- jfromGADT <$> go (jtoGADT s)
                           c <- jfromGADT <$> go (jtoGADT s1)
