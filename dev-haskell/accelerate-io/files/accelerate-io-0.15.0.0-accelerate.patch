diff --git a/Data/Array/Accelerate/IO/ByteString.hs b/Data/Array/Accelerate/IO/ByteString.hs
index 716d632..0880cb0 100644
--- a/Data/Array/Accelerate/IO/ByteString.hs
+++ b/Data/Array/Accelerate/IO/ByteString.hs
@@ -31,4 +31,4 @@ fromByteString :: (Shape sh, Elt e) => sh -> ByteStrings (EltRepr e) -> IO (Arra
 fromByteString sh byteStrings = do
-  let arr    = allocateArray sh
-      copier = let ((_,f),_,_) = blockCopyFunGenerator arr in f
+  arr <- allocateArray sh
+  let copier = let ((_,f),_,_) = blockCopyFunGenerator arr in f
   copier byteStrings
diff --git a/Data/Array/Accelerate/IO/Ptr.hs b/Data/Array/Accelerate/IO/Ptr.hs
index 40039e6..46f4598 100644
--- a/Data/Array/Accelerate/IO/Ptr.hs
+++ b/Data/Array/Accelerate/IO/Ptr.hs
@@ -37,4 +37,4 @@ fromPtr :: (Shape sh, Elt e) => sh -> BlockPtrs (EltRepr e) -> IO (Array sh e)
 fromPtr sh blkPtrs = do
-  let arr    = allocateArray sh
-      copier = let ((f,_),_,_) = blockCopyFunGenerator arr in f
+  arr <- allocateArray sh
+  let copier = let ((f,_),_,_) = blockCopyFunGenerator arr in f
   copier blkPtrs
@@ -96,4 +96,4 @@ toArray :: (Shape sh, Elt e) => sh -> BlockCopyFuns (EltRepr e) -> IO (Array sh
 toArray sh blockCopyFuns = do
-  let arr    = allocateArray sh
-      copier = let (_,_,f) = blockCopyFunGenerator arr in f
+  arr <- allocateArray sh
+  let copier = let (_,_,f) = blockCopyFunGenerator arr in f
   copier blockCopyFuns
