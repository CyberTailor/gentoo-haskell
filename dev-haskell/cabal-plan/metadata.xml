<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="project">
		<email>haskell@gentoo.org</email>
		<name>Gentoo Haskell</name>
	</maintainer>
	<use>
		<flag name="underline">Enable underlining of primary unit-ids</flag>
		<flag name="license-report">Enable @license-report@ sub-command (only relevant when the @exe@ flag is active)</flag>
	</use>
	<longdescription>
		This package provides a library (see &quot;Cabal.Plan&quot;) for decoding @plan.json@ files as
		well as the simple tool @cabal-plan@ for extracting and pretty printing
		the information contained in the @plan.json@ file.
		
		@plan.json@ files are generated by [cabal](https://hackage.haskell.org/package/cabal-install)&#39;s [Nix-style local builds](http://cabal.readthedocs.io/en/latest/nix-local-build.html) and contain detailed information about the build/install plan computed by the cabal solver.
		
		== @cabal-plan@ utility
		
		The @cabal-plan@ executable (enabled via the @exe@ cabal flag) provides various operations:
		
		[info] Show basic report of dependency tree
		[show] Dump &#39;PlanJson&#39; data-structure via &#39;Show&#39; instance
		[tred] Show dependency tree as a graph
		[diff] Diff two install plans
		[list-bins] List all binaries
		[list-bin] List single binary (useful for scripting, e.g. @cabal list-bin exe:cabal-plan@)
		[fingerprint] Print SHA256 sums of dependencies&#39; source tarballs and cabal files
		[dot] Generate graph of dependencies in @.dot@ format
		[topo] Print plan topologically sorted
		[license-report] Generate license report for a component (only available when built with @license-report@ flag enabled); see &lt;src/example/cabal-plan.md report example for cabal-plan&gt; (&lt;src/example/cabal-plan.html Pandoc rendered HTML&gt;)
		
		See also [&quot;New things in Haskell package QA&quot; Blogpost](http://oleg.fi/gists/posts/2018-01-08-haskell-package-qa.html) for a description of the @topo@ and @dot@ operations as well as how to enable tab-completion.
	</longdescription>
</pkgmetadata>
