# Copyright 1999-2022 Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

EAPI=8

# ebuild generated by hackport 0.7.9999
#hackport: flags: bounded-memory:test

CABAL_FEATURES="lib profile haddock hoogle hscolour test-suite"
inherit haskell-cabal

DESCRIPTION="Core effects for interacting with the Nix store"
HOMEPAGE="https://github.com/haskell-nix/hnix-store"

HACKAGE_REV="2"
SRC_URI="https://hackage.haskell.org/package/${P}/${P}.tar.gz
	https://hackage.haskell.org/package/${P}/revision/${HACKAGE_REV}.cabal -> ${PF}.cabal"

LICENSE="Apache-2.0"
SLOT="0/${PV}"
KEYWORDS="~amd64 ~x86"

PATCHES=(
	"${FILESDIR}/${PN}-0.5.0.0-fix-cabal.patch"
	"${FILESDIR}/${PN}-0.5.0.0-fix-tests.patch"
	"${FILESDIR}/${PN}-0.5.0.0-add-overloaded-strings.patch"
)

RDEPEND=">=dev-haskell/algebraic-graphs-0.5:=[profile?]
	<dev-haskell/attoparsec-0.15:=[profile?]
	<dev-haskell/base16-bytestring-1.1:=[profile?]
	<dev-haskell/base64-bytestring-1.3:=[profile?]
	<dev-haskell/cereal-0.6:=[profile?]
	<dev-haskell/cryptonite-0.30:=[profile?]
	<dev-haskell/hashable-1.5:=[profile?]
	<dev-haskell/lifted-base-0.3:=[profile?]
	<dev-haskell/memory-0.17:=[profile?]
	<dev-haskell/monad-control-1.1:=[profile?]
	<dev-haskell/mtl-2.3:=[profile?]
	>=dev-haskell/nix-derivation-1.1.1:=[profile?] <dev-haskell/nix-derivation-2:=[profile?]
	<dev-haskell/saltine-0.3:=[profile?]
	<dev-haskell/text-1.3:=[profile?]
	<dev-haskell/unordered-containers-0.3:=[profile?]
	<dev-haskell/vector-0.13:=[profile?]
	>=dev-lang/ghc-8.4.3:=
"
DEPEND="${RDEPEND}
	>=dev-haskell/cabal-2.2.0.1
	test? ( dev-haskell/hspec
		dev-haskell/tasty
		dev-haskell/tasty-discover[executable]
		dev-haskell/tasty-golden
		dev-haskell/tasty-hspec
		dev-haskell/tasty-hunit
		dev-haskell/tasty-quickcheck
		dev-haskell/temporary )
"

src_prepare() {
	# pull revised cabal from upstream
	cp "${DISTDIR}/${PF}.cabal" "${S}/${PN}.cabal" || die

	# Apply patches *after* pulling the revised cabal
	default

	cabal_chdeps \
		'algebraic-graphs >= 0.5 && < 0.6' 'algebraic-graphs >= 0.5'
}

src_configure() {
	haskell-cabal_src_configure \
		$(cabal_flag test bounded_memory)
}
