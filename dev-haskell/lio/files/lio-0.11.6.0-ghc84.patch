--- a/LIO/DCLabel.hs
+++ b/LIO/DCLabel.hs
@@ -130,2 +130,3 @@ import safe LIO.Labeled
 import safe LIO.Run
+import safe qualified Data.Semigroup as S
 
@@ -220,2 +221,5 @@ instance Read Disjunction where
 
+instance S.Semigroup Disjunction where
+  (<>) = dUnion
+
 instance Monoid Disjunction where
@@ -278,2 +282,5 @@ instance Read CNF where
 
+instance S.Semigroup CNF where
+  (<>) = cUnion
+
 instance Monoid CNF where
--- a/LIO/Label.hs
+++ b/LIO/Label.hs
@@ -22,2 +22,3 @@ import safe Data.Monoid ()
 import safe Data.Typeable
+import safe qualified Data.Semigroup as S
 
@@ -269,2 +270,5 @@ instance Label l => PrivDesc l NoPrivs where downgradeP _ l = l
 
+instance S.Semigroup NoPrivs where
+  (<>) _ _ = NoPrivs
+
 instance Monoid NoPrivs where
--- a/LIO/TCB.hs
+++ b/LIO/TCB.hs
@@ -43,2 +43,3 @@ import safe Data.IORef
 import safe Data.Typeable
+import safe qualified Data.Semigroup as S
 
@@ -156,2 +157,5 @@ newtype Priv a = PrivTCB a deriving (Show, Eq, Typeable)
 
+instance Monoid p => S.Semigroup (Priv p) where
+  (<>) (PrivTCB m1) (PrivTCB m2) = PrivTCB $ m1 `mappend` m2
+
 instance Monoid p => Monoid (Priv p) where
