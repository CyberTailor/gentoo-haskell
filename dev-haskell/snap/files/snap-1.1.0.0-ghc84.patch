--- a/src/Snap/Snaplet/Config.hs
+++ b/src/Snap/Snaplet/Config.hs
@@ -29,2 +29,3 @@ import Snap.Http.Server.Config (Config, fmapOpt, setOther, getOther, optDescrs
                                ,extendedCommandLineConfig)
+import qualified Data.Semigroup as S
 
@@ -54,2 +55,10 @@ instance Typeable AppConfig where
 ------------------------------------------------------------------------------
+instance S.Semigroup AppConfig where
+    (<>) a b = AppConfig
+        { appEnvironment = ov appEnvironment a b
+        }
+      where
+        ov f x y = getLast $! (mappend `on` (Last . f)) x y
+
+
 instance Monoid AppConfig where
--- a/src/Snap/Snaplet/Internal/Types.hs
+++ b/src/Snap/Snaplet/Internal/Types.hs
@@ -39,2 +39,3 @@ import           Data.Monoid                  (Monoid (mappend, mempty))
 #endif
+import qualified Data.Semigroup as S
 
@@ -471,2 +472,13 @@ newtype Hook a = Hook (Snaplet a -> IO (Either Text (Snaplet a)))
 ------------------------------------------------------------------------------
+instance S.Semigroup (Hook a) where
+    (Hook a) <> (Hook b) = Hook $ \s -> do
+      ea <- a s
+      case ea of
+        Left e -> return $ Left e
+        Right ares -> do
+          eb <- b ares
+          case eb of
+            Left e -> return $ Left e
+            Right bres -> return $ Right bres
+
 instance Monoid (Hook a) where
--- a/test/suite/Snap/Snaplet/Config/Tests.hs
+++ b/test/suite/Snap/Snaplet/Config/Tests.hs
@@ -28,3 +28,3 @@ import Test.QuickCheck
 import Test.HUnit hiding (Test)
-
+import qualified Data.Semigroup as S
 
@@ -52,2 +52,5 @@ instance Arbitrary ArbAppConfig where
 
+instance S.Semigroup ArbAppConfig where
+  a <> b = ArbAppConfig $ ((<>) `on` unArbAppConfig) a b
+
 instance Monoid ArbAppConfig where
