--- a/src/Text/Ginger/Html.hs
+++ b/src/Text/Ginger/Html.hs
@@ -20,2 +20,3 @@ import qualified Data.Text as Text
 import Data.Monoid
+import qualified Data.Semigroup as S
 
@@ -23,3 +24,3 @@ import Data.Monoid
 newtype Html = Html { unHtml :: Text }
-    deriving (Monoid, Show, Eq, Ord)
+    deriving (S.Semigroup, Monoid, Show, Eq, Ord)
 
--- a/src/Text/Ginger/Optimizer.hs
+++ b/src/Text/Ginger/Optimizer.hs
@@ -24,2 +24,3 @@ import Data.Text (Text)
 import qualified Data.Aeson as JSON
+import qualified Data.Semigroup as S
 
@@ -125,2 +126,5 @@ bothPure _ _ = Impure
 
+instance S.Semigroup Purity where
+    (<>) = bothPure
+
 instance Monoid Purity where
@@ -266,3 +270,3 @@ compileTimeEval e = case pureExpression e of
 newtype Collected = Collected [GVal Identity]
-    deriving (Monoid)
+    deriving (S.Semigroup, Monoid)
 
