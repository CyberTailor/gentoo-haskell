diff --git a/Data/PQueue/Internals.hs b/Data/PQueue/Internals.hs
index 49d9205..f45618f 100644
--- a/Data/PQueue/Internals.hs
+++ b/Data/PQueue/Internals.hs
@@ -35,3 +35,3 @@ import Control.DeepSeq
 import Data.Functor
-import Data.Foldable (Foldable (..))
+import qualified Data.Foldable as F (Foldable (..))
 import Data.Monoid (Monoid (..))
@@ -404,3 +404,3 @@ instance Functor rk => Functor (BinomForest rk) where
 
-instance Foldable Zero where
+instance F.Foldable Zero where
 	foldr _ z _ = z
@@ -408,9 +408,9 @@ instance Foldable Zero where
 
-instance Foldable rk => Foldable (Succ rk) where
-	foldr f z (Succ t ts) = foldr f (foldr f z ts) t
-	foldl f z (Succ t ts) = foldl f (foldl f z t) ts
+instance F.Foldable rk => F.Foldable (Succ rk) where
+	foldr f z (Succ t ts) = F.foldr f (F.foldr f z ts) t
+	foldl f z (Succ t ts) = F.foldl f (F.foldl f z t) ts
 
-instance Foldable rk => Foldable (BinomTree rk) where
-	foldr f z (BinomTree x ts) = x `f` foldr f z ts
-	foldl f z (BinomTree x ts) = foldl f (z `f` x) ts
+instance F.Foldable rk => F.Foldable (BinomTree rk) where
+	foldr f z (BinomTree x ts) = x `f` F.foldr f z ts
+	foldl f z (BinomTree x ts) = F.foldl f (z `f` x) ts
 
@@ -418,7 +418,7 @@ instance Foldable rk => Foldable (BinomForest rk) where
 	foldr _ z Nil = z
-	foldr f z (Skip tss) = foldr f z tss
-	foldr f z (Cons t tss) = foldr f (foldr f z tss) t
+	foldr f z (Skip tss) = F.foldr f z tss
+	foldr f z (Cons t tss) = F.foldr f (F.foldr f z tss) t
 	foldl _ z Nil = z
-	foldl f z (Skip tss) = foldl f z tss
-	foldl f z (Cons t tss) = foldl f (foldl f z t) tss
+	foldl f z (Skip tss) = F.foldl f z tss
+	foldl f z (Cons t tss) = F.foldl f (F.foldl f z t) tss
 
@@ -445,3 +445,3 @@ foldrU :: (a -> b -> b) -> b -> MinQueue a -> b
 foldrU _ z Empty = z
-foldrU f z (MinQueue _ x ts) = x `f` foldr f z ts
+foldrU f z (MinQueue _ x ts) = x `f` F.foldr f z ts
 
@@ -450,3 +450,3 @@ foldlU :: (b -> a -> b) -> b -> MinQueue a -> b
 foldlU _ z Empty = z
-foldlU f z (MinQueue _ x ts) = foldl f (z `f` x) ts
+foldlU f z (MinQueue _ x ts) = F.foldl f (z `f` x) ts
 
diff --git a/Data/PQueue/Max.hs b/Data/PQueue/Max.hs
index 222ff9a..24045bf 100644
--- a/Data/PQueue/Max.hs
+++ b/Data/PQueue/Max.hs
@@ -88,3 +88,3 @@ import Data.Monoid
 import Data.Maybe hiding (mapMaybe)
-import Data.Foldable hiding (toList)
+import Data.Foldable hiding (toList, null)
 import Data.Traversable
@@ -93,3 +93,3 @@ import qualified Data.PQueue.Min as Min
 import qualified Data.PQueue.Prio.Max.Internals as Prio
-import Data.PQueue.Prio.Max.Internals (Down(..))
+import Data.PQueue.Prio.Max.Internals as I (Down(..))
 
diff --git a/Data/PQueue/Min.hs b/Data/PQueue/Min.hs
index ad72760..750dad1 100644
--- a/Data/PQueue/Min.hs
+++ b/Data/PQueue/Min.hs
@@ -31,3 +31,3 @@ module Data.PQueue.Min (
 	empty,
-	null,
+	I.null,
 	size, 
@@ -95,3 +95,3 @@ import qualified Data.List as List
 
-import Data.PQueue.Internals
+import Data.PQueue.Internals as I
 
diff --git a/Data/PQueue/Prio/Max.hs b/Data/PQueue/Prio/Max.hs
index 7bb638d..5882976 100644
--- a/Data/PQueue/Prio/Max.hs
+++ b/Data/PQueue/Prio/Max.hs
@@ -120,3 +120,3 @@ import Data.Monoid
 import qualified Data.List as List
-import Data.Foldable hiding (toList)
+import Data.Foldable hiding (toList, null)
 import Data.Traversable
diff --git a/Data/PQueue/Prio/Min.hs b/Data/PQueue/Prio/Min.hs
index a85b544..4335dcc 100644
--- a/Data/PQueue/Prio/Min.hs
+++ b/Data/PQueue/Prio/Min.hs
@@ -41,3 +41,3 @@ module Data.PQueue.Prio.Min (
 	-- * Query
-	null,
+	I.null,
 	size,
@@ -123,3 +123,3 @@ import Data.Maybe (fromMaybe)
 
-import Data.PQueue.Prio.Internals
+import Data.PQueue.Prio.Internals as I
 
