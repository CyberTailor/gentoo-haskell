From 7696c7ec97906231e6f749ac9c62811c119f8721 Mon Sep 17 00:00:00 2001
From: Sergei Trofimovich <slyfox@gentoo.org>
Date: Sun, 4 Mar 2018 11:22:05 +0000
Subject: [PATCH] Revert "Compile with `--via-asm` when cross compiling."

This reverts commit 5f6fcf7808b16d066ad0fb2068225b3f2e8363f7.

--via-asm does not really work anywhere except maybe x86:
    https://ghc.haskell.org/trac/ghc/ticket/14889

Different assemblers and architectures have different syntax
of exposing and placing data.

--via-asm should be a whitelist on architectures/compilers
where it was tested and is supposed to work.
---
 mk/config.mk.in | 8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

diff --git a/mk/config.mk.in b/mk/config.mk.in
index 26b07f3159..e5ec04a195 100644
--- a/mk/config.mk.in
+++ b/mk/config.mk.in
@@ -649,12 +649,8 @@ $(eval $(call set_stage_HSC2HS_OPTS,0))
 $(eval $(call set_stage_HSC2HS_OPTS,1))
 $(eval $(call set_stage_HSC2HS_OPTS,2))
 ifeq "$(CrossCompiling)" "YES"
-# We'll assume we compile with gcc or clang, and both support `-S` and can as such use the
-# --via-asm pass, which should be faster and is required for cross compiling to windows, as
-# the c compiler complains about non-constant expressions even though they are constant and
-# end up as constants in the assembly.
-SRC_HSC2HS_OPTS_STAGE1 += --cross-compile --via-asm
-SRC_HSC2HS_OPTS_STAGE2 += --cross-compile --via-asm
+SRC_HSC2HS_OPTS_STAGE1 += --cross-compile
+SRC_HSC2HS_OPTS_STAGE2 += --cross-compile
 endif
 SRC_HSC2HS_OPTS_STAGE0 += --cflag=-D$(HostArch_CPP)_HOST_ARCH --cflag=-D$(HostOS_CPP)_HOST_OS
 SRC_HSC2HS_OPTS_STAGE1 += --cflag=-D$(TargetArch_CPP)_HOST_ARCH --cflag=-D$(TargetOS_CPP)_HOST_OS
-- 
2.16.2

