--- a/libffi/ghc.mk
+++ b/libffi/ghc.mk
@@ -63,6 +63,9 @@ $(libffi_STAMP_CONFIGURE): $(TOUCH_DEP)
 # will use cygwin symbolic links which cannot be read by mingw gcc.
 	chmod +x libffi/ln
 
+	# fix libffi build failure on s390: add missing file
+	( cd libffi/build && "$(PATCH_CMD)" -p1 < ../libffi_s390-internal.patch; )
+
 	# We need to use -MMD rather than -MD, as otherwise we get paths
 	# like c:/... in the dependency files on Windows, and the extra
 	# colons break make
--- /dev/null
+++ b/libffi/libffi_s390-internal.patch
@@ -0,0 +1,36 @@
+--- a/Makefile.am
++++ b/Makefile.am
+@@ -109,7 +109,7 @@ noinst_HEADERS = \
+ 	src/or1k/ffitarget.h						\
+ 	src/pa/ffitarget.h						\
+ 	src/powerpc/ffitarget.h src/powerpc/asm.h src/powerpc/ffi_powerpc.h \
+-	src/s390/ffitarget.h						\
++	src/s390/ffitarget.h src/s390/internal.h			\
+ 	src/sh/ffitarget.h						\
+ 	src/sh64/ffitarget.h						\
+ 	src/sparc/ffitarget.h src/sparc/internal.h			\
+--- a/Makefile.in
++++ b/Makefile.in
+@@ -548,7 +548,7 @@ noinst_HEADERS = \
+ 	src/or1k/ffitarget.h						\
+ 	src/pa/ffitarget.h						\
+ 	src/powerpc/ffitarget.h src/powerpc/asm.h src/powerpc/ffi_powerpc.h \
+-	src/s390/ffitarget.h						\
++	src/s390/ffitarget.h src/s390/internal.h			\
+ 	src/sh/ffitarget.h						\
+ 	src/sh64/ffitarget.h						\
+ 	src/sparc/ffitarget.h src/sparc/internal.h			\
+--- /dev/null
++++ b/src/s390/internal.h
+@@ -0,0 +1,11 @@
++/* If these values change, sysv.S must be adapted!  */
++#define FFI390_RET_DOUBLE	0
++#define FFI390_RET_FLOAT	1
++#define FFI390_RET_INT64	2
++#define FFI390_RET_INT32	3
++#define FFI390_RET_VOID		4
++
++#define FFI360_RET_MASK		7
++#define FFI390_RET_IN_MEM	8
++
++#define FFI390_RET_STRUCT	(FFI390_RET_VOID | FFI390_RET_IN_MEM)
