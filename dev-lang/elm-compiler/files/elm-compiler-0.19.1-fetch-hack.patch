--- a/builder/src/Http.hs
+++ b/builder/src/Http.hs
@@ -38,6 +38,8 @@ import Network.HTTP.Types.Header (Header, hAccept, hAcceptEncoding, hUserAgent)
 import Network.HTTP.Types.Method (Method, methodGet, methodPost)
 import qualified Network.HTTP.Client as Multi (RequestBody(RequestBodyLBS))
 import qualified Network.HTTP.Client.MultipartFormData as Multi
+import qualified System.Environment as SE
+import qualified System.Exit as SE
 
 import qualified Json.Encode as Encode
 import qualified Elm.Version as V
@@ -87,6 +89,13 @@ fetch methodVerb manager url headers onError onSuccess =
               { method = methodVerb
               , requestHeaders = addDefaultHeaders headers
               }
+      env <- SE.lookupEnv "ELM_FETCH_MODE_GENTOO"
+      case env of
+          Just "fail" -> do putStrLn $ "fetch: ELM_FETCH_MODE_GENTOO=fail: " ++ show req1
+                            SE.die $ "fetch: ELM_FETCH_MODE_GENTOO=fail: " ++ show req1
+          Just "warn" -> putStrLn $ "fetch: ELM_FETCH_MODE_GENTOO=warn: " ++ show req1
+          Nothing     -> return ()
+
       withResponse req1 manager $ \response ->
         do  chunks <- brConsume (responseBody response)
             onSuccess (BS.concat chunks)
